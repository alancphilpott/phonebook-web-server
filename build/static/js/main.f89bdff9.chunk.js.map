{"version":3,"sources":["components/Contact.js","components/Contacts.js","components/Filter.js","components/ContactForm.js","services/contacts.js","components/Notification.js","App.js","index.js"],"names":["Contact","cInfo","handleDelete","name","number","className","onClick","id","Contacts","contacts","map","c","Filter","search","handleInput","type","value","onChange","ContactForm","props","onSubmit","handleForm","handleNameInput","handleNumberInput","baseURL","contactService","getAll","axios","get","then","res","data","create","newContact","post","update","updatedContact","put","deleteOne","delete","console","log","Notification","message","notificationColor","notificationStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginTop","marginBottom","style","App","useState","setContacts","newName","setNewName","newNumber","setNewNumber","setSearch","showNotification","setShowNotification","useEffect","catch","err","setTimeout","contactsToShow","filter","p","toLocaleLowerCase","includes","toLowerCase","e","target","preventDefault","contact","existing","length","existingContact","shouldUpdate","window","confirm","concat","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f89bdff9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Contact = ({ cInfo, handleDelete }) => (\r\n  <p>\r\n    <span>\r\n      {cInfo.name} : {cInfo.number}\r\n    </span>{' '}\r\n    <button className={'deleteBtn'} onClick={() => handleDelete(cInfo.id)}>\r\n      Delete\r\n    </button>\r\n  </p>\r\n)\r\n\r\nexport default Contact\r\n","import React from 'react'\r\nimport Contact from './Contact'\r\n\r\nconst Contacts = ({ contacts, handleDelete }) => (\r\n  <div className={'contacts'}>\r\n    {contacts.map((c) => (\r\n      <Contact key={c.id} cInfo={c} handleDelete={handleDelete} />\r\n    ))}\r\n  </div>\r\n)\r\n\r\nexport default Contacts\r\n","import React from 'react'\r\n\r\nconst Filter = ({ search, handleInput }) => (\r\n  <div className={'filter'}>\r\n    <header>Search Contact</header>\r\n    <input type=\"text\" value={search} onChange={handleInput} />\r\n  </div>\r\n)\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst ContactForm = (props) => (\r\n  <div className={'form-wrapper'}>\r\n    <form onSubmit={props.handleForm}>\r\n      <div>\r\n        <header>Name</header>\r\n        <input type=\"text\" value={props.name} onChange={props.handleNameInput} />\r\n        <header>Number</header>\r\n        <input type=\"text\" value={props.number} onChange={props.handleNumberInput} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Add Contact</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n)\r\n\r\nexport default ContactForm\r\n","import axios from 'axios'\r\n\r\nconst baseURL = '/api/contacts'\r\n\r\nconst getAll = () => {\r\n  const req = axios.get(baseURL)\r\n  return req.then((res) => res.data)\r\n}\r\n\r\nconst create = (newContact) => {\r\n  const req = axios.post(baseURL, newContact)\r\n  return req.then((res) => res.data)\r\n}\r\n\r\nconst update = (id, updatedContact) => {\r\n  const req = axios.put(`${baseURL}/${id}`, updatedContact)\r\n  return req.then((res) => res.data)\r\n}\r\n\r\nconst deleteOne = (id) => {\r\n  const req = axios.delete(`${baseURL}/${id}`)\r\n  return req.then((res) => {\r\n    console.log(res)\r\n    return res\r\n  })\r\n}\r\n\r\nconst contactService = { getAll, create, update, deleteOne }\r\n\r\nexport default contactService\r\n","const Notification = ({ message, type }) => {\r\n  let notificationColor = ''\r\n\r\n  switch (type) {\r\n    case 'added':\r\n    case 'success':\r\n      notificationColor = 'green'\r\n      break\r\n    case 'updated':\r\n    case 'warning':\r\n      notificationColor = 'orange'\r\n      break\r\n    case 'deleted':\r\n    case 'error':\r\n      notificationColor = 'red'\r\n      break\r\n    default:\r\n      notificationColor = 'black'\r\n  }\r\n\r\n  const notificationStyle = {\r\n    color: notificationColor,\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginTop: 15,\r\n    marginBottom: 15\r\n  }\r\n\r\n  return message === null ? null : (\r\n    <div className=\"notification\" style={notificationStyle}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useEffect } from 'react'\nimport Contacts from './components/Contacts'\nimport Filter from './components/Filter'\nimport ContactForm from './components/ContactForm'\nimport contactService from './services/contacts'\nimport Notification from './components/Notification'\n\nfunction App() {\n  const [contacts, setContacts] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [search, setSearch] = useState('')\n  const [showNotification, setShowNotification] = useState({ message: null, type: null })\n\n  // Effects\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then((contacts) => setContacts(contacts))\n      .catch((err) => {\n        setShowNotification({ message: `Error Loading Contacts`, type: 'error' })\n\n        setTimeout(() => setShowNotification({ message: null, type: null }), 2000)\n      })\n  }, [])\n\n  // Helper Functions\n  const checkExists = (contact) =>\n    contacts.filter((c) => c.name.toLowerCase() === contact.name.toLowerCase())\n\n  // Event and State Mngt\n  const handleNameInput = (e) => setNewName(e.target.value)\n\n  const handleNumberInput = (e) => setNewNumber(e.target.value)\n\n  const handleSearchInput = (e) => setSearch(e.target.value)\n\n  const handleNewContact = (e) => {\n    e.preventDefault()\n\n    const newContact = {\n      name: newName,\n      number: newNumber\n    }\n\n    const existing = checkExists(newContact)\n    if (existing.length !== 0) {\n      const existingContact = existing[0]\n\n      const shouldUpdate = window.confirm(\n        `${existingContact.name} Already Exists - Update Their Phone Number?`\n      )\n\n      const updatedContact = { ...existingContact, number: newContact.number }\n\n      if (shouldUpdate) {\n        contactService.update(existingContact.id, updatedContact).then((contact) => {\n          setContacts(contacts.map((c) => (c.id !== updatedContact.id ? c : contact)))\n        })\n\n        setShowNotification({ message: `Updated ${updatedContact.name}`, type: 'updated' })\n\n        setTimeout(() => setShowNotification({ message: null, type: null }), 2000)\n\n        setNewName('')\n        setNewNumber('')\n      }\n    } else {\n      contactService\n        .create(newContact)\n        .then((contact) => {\n          setContacts(contacts.concat(contact))\n\n          setShowNotification({ message: `Added ${contact.name}`, type: 'added' })\n\n          setTimeout(() => setShowNotification({ message: null, type: null }), 2000)\n\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch((err) => {\n          setShowNotification({ message: `Error Adding Contact`, type: 'error' })\n\n          setTimeout(() => setShowNotification({ message: null, type: null }), 2000)\n        })\n    }\n  }\n\n  const handleDeleteContact = (id) => {\n    const contact = contacts.find((c) => c.id === id)\n\n    const shouldDelete = window.confirm(`Delete ${contact.name}?`)\n\n    if (shouldDelete) {\n      contactService\n        .deleteOne(id)\n        .then((res) => {\n          setContacts(contacts.filter((c) => c.id !== id))\n\n          setShowNotification({ message: `Deleted ${contact.name}`, type: 'deleted' })\n\n          setTimeout(() => setShowNotification({ message: null, type: null }), 2000)\n        })\n        .catch((err) => {\n          setContacts(contacts.filter((c) => c.id !== id))\n\n          setShowNotification({\n            message: `Information of ${contact.name} has already been removed from server`,\n            type: 'error'\n          })\n\n          setTimeout(() => setShowNotification({ message: null, type: null }), 2000)\n        })\n    }\n  }\n\n  const contactsToShow =\n    search === ''\n      ? contacts\n      : contacts.filter((p) => p.name.toLocaleLowerCase().includes(search.toLowerCase()))\n\n  return (\n    <div className={'app-main'}>\n      <h1>Phonebook 📖</h1>\n      <Notification message={showNotification.message} type={showNotification.type} />\n\n      <Filter search={search} handleInput={handleSearchInput} />\n\n      <h1>Add New Contact ➕</h1>\n      <ContactForm\n        name={newName}\n        number={newNumber}\n        handleForm={handleNewContact}\n        handleNameInput={handleNameInput}\n        handleNumberInput={handleNumberInput}\n      />\n\n      <h1>Contacts 👥</h1>\n      <Contacts contacts={contactsToShow} handleDelete={handleDeleteContact} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}